{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree",
        "constructInfo": {
          "fqn": "@aws-cdk/core.Construct",
          "version": "1.135.0"
        }
      },
      "smokler": {
        "id": "smokler",
        "path": "smokler",
        "children": {
          "smokler_dev_user_pool": {
            "id": "smokler_dev_user_pool",
            "path": "smokler/smokler_dev_user_pool",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "smokler/smokler_dev_user_pool/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Cognito::UserPool",
                  "aws:cdk:cloudformation:props": {
                    "accountRecoverySetting": {
                      "recoveryMechanisms": [
                        {
                          "name": "verified_email",
                          "priority": 1
                        }
                      ]
                    },
                    "adminCreateUserConfig": {
                      "allowAdminCreateUserOnly": false
                    },
                    "autoVerifiedAttributes": [
                      "email"
                    ],
                    "deviceConfiguration": {
                      "challengeRequiredOnNewDevice": false,
                      "deviceOnlyRememberedOnUserPrompt": true
                    },
                    "emailConfiguration": {
                      "replyToEmailAddress": "support@zerobased.ru",
                      "emailSendingAccount": "COGNITO_DEFAULT"
                    },
                    "emailVerificationMessage": "The verification code to your new account is {####}",
                    "emailVerificationSubject": "Verify your new account",
                    "policies": {
                      "passwordPolicy": {
                        "minimumLength": 8,
                        "requireLowercase": false,
                        "requireUppercase": false,
                        "requireNumbers": false,
                        "requireSymbols": false
                      }
                    },
                    "schema": [
                      {
                        "name": "email",
                        "mutable": true,
                        "required": true
                      },
                      {
                        "name": "family_name",
                        "mutable": true,
                        "required": true
                      },
                      {
                        "name": "given_name",
                        "mutable": true,
                        "required": true
                      }
                    ],
                    "smsVerificationMessage": "The verification code to your new account is {####}",
                    "usernameAttributes": [
                      "email"
                    ],
                    "usernameConfiguration": {
                      "caseSensitive": false
                    },
                    "verificationMessageTemplate": {
                      "defaultEmailOption": "CONFIRM_WITH_CODE",
                      "emailMessage": "The verification code to your new account is {####}",
                      "emailSubject": "Verify your new account",
                      "smsMessage": "The verification code to your new account is {####}"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPool",
                  "version": "1.135.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-cognito.UserPool",
              "version": "1.135.0"
            }
          },
          "smokler_dev_user_pool_app_client": {
            "id": "smokler_dev_user_pool_app_client",
            "path": "smokler/smokler_dev_user_pool_app_client",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "smokler/smokler_dev_user_pool_app_client/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Cognito::UserPoolClient",
                  "aws:cdk:cloudformation:props": {
                    "userPoolId": {
                      "Ref": "smoklerdevuserpool4834C5ED"
                    },
                    "allowedOAuthFlows": [
                      "implicit"
                    ],
                    "allowedOAuthFlowsUserPoolClient": true,
                    "allowedOAuthScopes": [
                      "email",
                      "openid",
                      "profile"
                    ],
                    "callbackUrLs": [
                      "https://example.com"
                    ],
                    "supportedIdentityProviders": [
                      "COGNITO"
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPoolClient",
                  "version": "1.135.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-cognito.UserPoolClient",
              "version": "1.135.0"
            }
          },
          "smokler_dev_identity_pool": {
            "id": "smokler_dev_identity_pool",
            "path": "smokler/smokler_dev_identity_pool",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::Cognito::IdentityPool",
              "aws:cdk:cloudformation:props": {
                "allowUnauthenticatedIdentities": true,
                "cognitoIdentityProviders": []
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-cognito.CfnIdentityPool",
              "version": "1.135.0"
            }
          },
          "smokler_dev_user_pool_domain": {
            "id": "smokler_dev_user_pool_domain",
            "path": "smokler/smokler_dev_user_pool_domain",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "smokler/smokler_dev_user_pool_domain/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Cognito::UserPoolDomain",
                  "aws:cdk:cloudformation:props": {
                    "domain": {
                      "Fn::Join": [
                        "",
                        [
                          "smokler-dev-user-pool-",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          "-",
                          {
                            "Ref": "AWS::Region"
                          }
                        ]
                      ]
                    },
                    "userPoolId": {
                      "Ref": "smoklerdevuserpool4834C5ED"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-cognito.CfnUserPoolDomain",
                  "version": "1.135.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-cognito.UserPoolDomain",
              "version": "1.135.0"
            }
          },
          "smokler_dev_chalice": {
            "id": "smokler_dev_chalice",
            "path": "smokler/smokler_dev_chalice",
            "children": {
              "ChaliceAppCode": {
                "id": "ChaliceAppCode",
                "path": "smokler/smokler_dev_chalice/ChaliceAppCode",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "smokler/smokler_dev_chalice/ChaliceAppCode/Stage",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.AssetStaging",
                      "version": "1.135.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "smokler/smokler_dev_chalice/ChaliceAppCode/AssetBucket",
                    "children": {
                      "Notifications": {
                        "id": "Notifications",
                        "path": "smokler/smokler_dev_chalice/ChaliceAppCode/AssetBucket/Notifications",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.Construct",
                          "version": "1.135.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-s3.BucketBase",
                      "version": "1.135.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-s3-assets.Asset",
                  "version": "1.135.0"
                }
              },
              "ChaliceApp": {
                "id": "ChaliceApp",
                "path": "smokler/smokler_dev_chalice/ChaliceApp",
                "children": {
                  "$Mappings": {
                    "id": "$Mappings",
                    "path": "smokler/smokler_dev_chalice/ChaliceApp/$Mappings",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Construct",
                      "version": "1.135.0"
                    }
                  },
                  "$Conditions": {
                    "id": "$Conditions",
                    "path": "smokler/smokler_dev_chalice/ChaliceApp/$Conditions",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Construct",
                      "version": "1.135.0"
                    }
                  },
                  "$Rules": {
                    "id": "$Rules",
                    "path": "smokler/smokler_dev_chalice/ChaliceApp/$Rules",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Construct",
                      "version": "1.135.0"
                    }
                  },
                  "DefaultRole": {
                    "id": "DefaultRole",
                    "path": "smokler/smokler_dev_chalice/ChaliceApp/DefaultRole",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Version": "2012-10-17",
                          "Statement": [
                            {
                              "Sid": "",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              },
                              "Action": "sts:AssumeRole"
                            }
                          ]
                        },
                        "policies": [
                          {
                            "policyDocument": {
                              "Version": "2012-10-17",
                              "Statement": [
                                {
                                  "Effect": "Allow",
                                  "Action": [
                                    "logs:CreateLogGroup",
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                  ],
                                  "Resource": "arn:*:logs:*:*:*"
                                }
                              ]
                            },
                            "policyName": "DefaultRolePolicy"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.CfnRole",
                      "version": "1.135.0"
                    }
                  },
                  "APIHandler": {
                    "id": "APIHandler",
                    "path": "smokler/smokler_dev_chalice/ChaliceApp/APIHandler",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Serverless::Function",
                      "aws:cdk:cloudformation:props": {
                        "codeUri": {
                          "bucket": {
                            "Ref": "AssetParametersd47bc662d410c39e43173062828863a1156d23fc76df7d5248a83b6c316f16a3S3BucketF50908F8"
                          },
                          "key": {
                            "Fn::Join": [
                              "",
                              [
                                {
                                  "Fn::Select": [
                                    0,
                                    {
                                      "Fn::Split": [
                                        "||",
                                        {
                                          "Ref": "AssetParametersd47bc662d410c39e43173062828863a1156d23fc76df7d5248a83b6c316f16a3S3VersionKey90068AC3"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Fn::Select": [
                                    1,
                                    {
                                      "Fn::Split": [
                                        "||",
                                        {
                                          "Ref": "AssetParametersd47bc662d410c39e43173062828863a1156d23fc76df7d5248a83b6c316f16a3S3VersionKey90068AC3"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            ]
                          }
                        },
                        "environment": {
                          "variables": {
                            "COGNITO_USER_POOL_ARN": {
                              "Fn::GetAtt": [
                                "smoklerdevuserpool4834C5ED",
                                "Arn"
                              ]
                            },
                            "APP_NAME": "smokler"
                          }
                        },
                        "handler": "app.app",
                        "memorySize": 128,
                        "role": {
                          "Fn::GetAtt": [
                            "DefaultRole",
                            "Arn"
                          ]
                        },
                        "runtime": "python3.8",
                        "tags": {
                          "aws-chalice": "version=1.26.2:stage=smokler:app=smokler"
                        },
                        "timeout": 60,
                        "tracing": "PassThrough"
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-sam.CfnFunction",
                      "version": "1.135.0"
                    }
                  },
                  "RestAPI": {
                    "id": "RestAPI",
                    "path": "smokler/smokler_dev_chalice/ChaliceApp/RestAPI",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Serverless::Api",
                      "aws:cdk:cloudformation:props": {
                        "stageName": "api",
                        "definitionBody": {
                          "swagger": "2.0",
                          "info": {
                            "version": "1.0",
                            "title": "smokler"
                          },
                          "schemes": [
                            "https"
                          ],
                          "paths": {
                            "/comment": {
                              "post": {
                                "consumes": [
                                  "application/json"
                                ],
                                "produces": [
                                  "application/json"
                                ],
                                "responses": {
                                  "200": {
                                    "description": "200 response",
                                    "schema": {
                                      "$ref": "#/definitions/Empty"
                                    }
                                  }
                                },
                                "x-amazon-apigateway-integration": {
                                  "responses": {
                                    "default": {
                                      "statusCode": "200"
                                    }
                                  },
                                  "uri": {
                                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                  },
                                  "passthroughBehavior": "when_no_match",
                                  "httpMethod": "POST",
                                  "contentHandling": "CONVERT_TO_TEXT",
                                  "type": "aws_proxy"
                                },
                                "security": [
                                  {
                                    "CognitoAuthorizer": []
                                  }
                                ]
                              },
                              "get": {
                                "consumes": [
                                  "application/json"
                                ],
                                "produces": [
                                  "application/json"
                                ],
                                "responses": {
                                  "200": {
                                    "description": "200 response",
                                    "schema": {
                                      "$ref": "#/definitions/Empty"
                                    }
                                  }
                                },
                                "x-amazon-apigateway-integration": {
                                  "responses": {
                                    "default": {
                                      "statusCode": "200"
                                    }
                                  },
                                  "uri": {
                                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                  },
                                  "passthroughBehavior": "when_no_match",
                                  "httpMethod": "POST",
                                  "contentHandling": "CONVERT_TO_TEXT",
                                  "type": "aws_proxy"
                                },
                                "security": [
                                  {
                                    "CognitoAuthorizer": []
                                  }
                                ]
                              }
                            },
                            "/event": {
                              "post": {
                                "consumes": [
                                  "application/json"
                                ],
                                "produces": [
                                  "application/json"
                                ],
                                "responses": {
                                  "200": {
                                    "description": "200 response",
                                    "schema": {
                                      "$ref": "#/definitions/Empty"
                                    }
                                  }
                                },
                                "x-amazon-apigateway-integration": {
                                  "responses": {
                                    "default": {
                                      "statusCode": "200"
                                    }
                                  },
                                  "uri": {
                                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                  },
                                  "passthroughBehavior": "when_no_match",
                                  "httpMethod": "POST",
                                  "contentHandling": "CONVERT_TO_TEXT",
                                  "type": "aws_proxy"
                                },
                                "security": [
                                  {
                                    "CognitoAuthorizer": []
                                  }
                                ]
                              },
                              "get": {
                                "consumes": [
                                  "application/json"
                                ],
                                "produces": [
                                  "application/json"
                                ],
                                "responses": {
                                  "200": {
                                    "description": "200 response",
                                    "schema": {
                                      "$ref": "#/definitions/Empty"
                                    }
                                  }
                                },
                                "x-amazon-apigateway-integration": {
                                  "responses": {
                                    "default": {
                                      "statusCode": "200"
                                    }
                                  },
                                  "uri": {
                                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                  },
                                  "passthroughBehavior": "when_no_match",
                                  "httpMethod": "POST",
                                  "contentHandling": "CONVERT_TO_TEXT",
                                  "type": "aws_proxy"
                                },
                                "security": [
                                  {
                                    "CognitoAuthorizer": []
                                  }
                                ]
                              }
                            },
                            "/user": {
                              "get": {
                                "consumes": [
                                  "application/json"
                                ],
                                "produces": [
                                  "application/json"
                                ],
                                "responses": {
                                  "200": {
                                    "description": "200 response",
                                    "schema": {
                                      "$ref": "#/definitions/Empty"
                                    }
                                  }
                                },
                                "x-amazon-apigateway-integration": {
                                  "responses": {
                                    "default": {
                                      "statusCode": "200"
                                    }
                                  },
                                  "uri": {
                                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                  },
                                  "passthroughBehavior": "when_no_match",
                                  "httpMethod": "POST",
                                  "contentHandling": "CONVERT_TO_TEXT",
                                  "type": "aws_proxy"
                                },
                                "security": [
                                  {
                                    "CognitoAuthorizer": []
                                  }
                                ]
                              },
                              "post": {
                                "consumes": [
                                  "application/json"
                                ],
                                "produces": [
                                  "application/json"
                                ],
                                "responses": {
                                  "200": {
                                    "description": "200 response",
                                    "schema": {
                                      "$ref": "#/definitions/Empty"
                                    }
                                  }
                                },
                                "x-amazon-apigateway-integration": {
                                  "responses": {
                                    "default": {
                                      "statusCode": "200"
                                    }
                                  },
                                  "uri": {
                                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                  },
                                  "passthroughBehavior": "when_no_match",
                                  "httpMethod": "POST",
                                  "contentHandling": "CONVERT_TO_TEXT",
                                  "type": "aws_proxy"
                                },
                                "security": [
                                  {
                                    "CognitoAuthorizer": []
                                  }
                                ]
                              }
                            },
                            "/notification_settings": {
                              "post": {
                                "consumes": [
                                  "application/json"
                                ],
                                "produces": [
                                  "application/json"
                                ],
                                "responses": {
                                  "200": {
                                    "description": "200 response",
                                    "schema": {
                                      "$ref": "#/definitions/Empty"
                                    }
                                  }
                                },
                                "x-amazon-apigateway-integration": {
                                  "responses": {
                                    "default": {
                                      "statusCode": "200"
                                    }
                                  },
                                  "uri": {
                                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                  },
                                  "passthroughBehavior": "when_no_match",
                                  "httpMethod": "POST",
                                  "contentHandling": "CONVERT_TO_TEXT",
                                  "type": "aws_proxy"
                                },
                                "security": [
                                  {
                                    "CognitoAuthorizer": []
                                  }
                                ]
                              }
                            },
                            "/upload": {
                              "put": {
                                "consumes": [
                                  "image/jpeg"
                                ],
                                "produces": [
                                  "application/json"
                                ],
                                "responses": {
                                  "200": {
                                    "description": "200 response",
                                    "schema": {
                                      "$ref": "#/definitions/Empty"
                                    }
                                  }
                                },
                                "x-amazon-apigateway-integration": {
                                  "responses": {
                                    "default": {
                                      "statusCode": "200"
                                    }
                                  },
                                  "uri": {
                                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
                                  },
                                  "passthroughBehavior": "when_no_match",
                                  "httpMethod": "POST",
                                  "contentHandling": "CONVERT_TO_TEXT",
                                  "type": "aws_proxy"
                                },
                                "security": [
                                  {
                                    "CognitoAuthorizer": []
                                  }
                                ]
                              }
                            }
                          },
                          "definitions": {
                            "Empty": {
                              "type": "object",
                              "title": "Empty Schema"
                            }
                          },
                          "x-amazon-apigateway-binary-media-types": [
                            "application/octet-stream",
                            "application/x-tar",
                            "application/zip",
                            "audio/basic",
                            "audio/ogg",
                            "audio/mp4",
                            "audio/mpeg",
                            "audio/wav",
                            "audio/webm",
                            "image/png",
                            "image/jpg",
                            "image/jpeg",
                            "image/gif",
                            "video/ogg",
                            "video/mpeg",
                            "video/webm"
                          ],
                          "securityDefinitions": {
                            "CognitoAuthorizer": {
                              "in": "header",
                              "type": "apiKey",
                              "name": "Authorization",
                              "x-amazon-apigateway-authtype": "cognito_user_pools",
                              "x-amazon-apigateway-authorizer": {
                                "type": "cognito_user_pools",
                                "providerARNs": [
                                  {
                                    "Fn::GetAtt": [
                                      "smoklerdevuserpool4834C5ED",
                                      "Arn"
                                    ]
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "endpointConfiguration": "EDGE"
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-sam.CfnApi",
                      "version": "1.135.0"
                    }
                  },
                  "APIHandlerInvokePermission": {
                    "id": "APIHandlerInvokePermission",
                    "path": "smokler/smokler_dev_chalice/ChaliceApp/APIHandlerInvokePermission",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                      "aws:cdk:cloudformation:props": {
                        "action": "lambda:InvokeFunction",
                        "functionName": {
                          "Ref": "APIHandler"
                        },
                        "principal": "apigateway.amazonaws.com",
                        "sourceArn": {
                          "Fn::Sub": [
                            "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${RestAPIId}/*",
                            {
                              "RestAPIId": {
                                "Ref": "RestAPI"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-lambda.CfnPermission",
                      "version": "1.135.0"
                    }
                  },
                  "$Hooks": {
                    "id": "$Hooks",
                    "path": "smokler/smokler_dev_chalice/ChaliceApp/$Hooks",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Construct",
                      "version": "1.135.0"
                    }
                  },
                  "$Ouputs": {
                    "id": "$Ouputs",
                    "path": "smokler/smokler_dev_chalice/ChaliceApp/$Ouputs",
                    "children": {
                      "RestAPIId": {
                        "id": "RestAPIId",
                        "path": "smokler/smokler_dev_chalice/ChaliceApp/$Ouputs/RestAPIId",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.CfnOutput",
                          "version": "1.135.0"
                        }
                      },
                      "APIHandlerName": {
                        "id": "APIHandlerName",
                        "path": "smokler/smokler_dev_chalice/ChaliceApp/$Ouputs/APIHandlerName",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.CfnOutput",
                          "version": "1.135.0"
                        }
                      },
                      "APIHandlerArn": {
                        "id": "APIHandlerArn",
                        "path": "smokler/smokler_dev_chalice/ChaliceApp/$Ouputs/APIHandlerArn",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.CfnOutput",
                          "version": "1.135.0"
                        }
                      },
                      "EndpointURL": {
                        "id": "EndpointURL",
                        "path": "smokler/smokler_dev_chalice/ChaliceApp/$Ouputs/EndpointURL",
                        "constructInfo": {
                          "fqn": "@aws-cdk/core.CfnOutput",
                          "version": "1.135.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Construct",
                      "version": "1.135.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/cloudformation-include.CfnInclude",
                  "version": "1.135.0"
                }
              },
              "DefaultRole": {
                "id": "DefaultRole",
                "path": "smokler/smokler_dev_chalice/DefaultRole",
                "children": {
                  "Policy": {
                    "id": "Policy",
                    "path": "smokler/smokler_dev_chalice/DefaultRole/Policy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "smokler/smokler_dev_chalice/DefaultRole/Policy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "smoklerdevusertable1B6D4DA5",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Ref": "AWS::NoValue"
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "s3:GetObject*",
                                    "s3:GetBucket*",
                                    "s3:List*",
                                    "s3:DeleteObject*",
                                    "s3:PutObject*",
                                    "s3:Abort*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "smoklerdevmediabucketFAE02E8C",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "smoklerdevmediabucketFAE02E8C",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "smoklerdevchaliceDefaultRolePolicy8E930A0E",
                            "roles": [
                              {
                                "Fn::Select": [
                                  1,
                                  {
                                    "Fn::Split": [
                                      "/",
                                      {
                                        "Fn::Select": [
                                          5,
                                          {
                                            "Fn::Split": [
                                              ":",
                                              {
                                                "Fn::GetAtt": [
                                                  "DefaultRole",
                                                  "Arn"
                                                ]
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-iam.CfnPolicy",
                          "version": "1.135.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.Policy",
                      "version": "1.135.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/core.Resource",
                  "version": "1.135.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.135.0"
            }
          },
          "AssetParameters": {
            "id": "AssetParameters",
            "path": "smokler/AssetParameters",
            "children": {
              "d47bc662d410c39e43173062828863a1156d23fc76df7d5248a83b6c316f16a3": {
                "id": "d47bc662d410c39e43173062828863a1156d23fc76df7d5248a83b6c316f16a3",
                "path": "smokler/AssetParameters/d47bc662d410c39e43173062828863a1156d23fc76df7d5248a83b6c316f16a3",
                "children": {
                  "S3Bucket": {
                    "id": "S3Bucket",
                    "path": "smokler/AssetParameters/d47bc662d410c39e43173062828863a1156d23fc76df7d5248a83b6c316f16a3/S3Bucket",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.CfnParameter",
                      "version": "1.135.0"
                    }
                  },
                  "S3VersionKey": {
                    "id": "S3VersionKey",
                    "path": "smokler/AssetParameters/d47bc662d410c39e43173062828863a1156d23fc76df7d5248a83b6c316f16a3/S3VersionKey",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.CfnParameter",
                      "version": "1.135.0"
                    }
                  },
                  "ArtifactHash": {
                    "id": "ArtifactHash",
                    "path": "smokler/AssetParameters/d47bc662d410c39e43173062828863a1156d23fc76df7d5248a83b6c316f16a3/ArtifactHash",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.CfnParameter",
                      "version": "1.135.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/core.Construct",
                  "version": "1.135.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.135.0"
            }
          },
          "smokler_dev_user_table": {
            "id": "smokler_dev_user_table",
            "path": "smokler/smokler_dev_user_table",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "smokler/smokler_dev_user_table/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::DynamoDB::Table",
                  "aws:cdk:cloudformation:props": {
                    "keySchema": [
                      {
                        "attributeName": "PK",
                        "keyType": "HASH"
                      },
                      {
                        "attributeName": "SK",
                        "keyType": "RANGE"
                      }
                    ],
                    "attributeDefinitions": [
                      {
                        "attributeName": "PK",
                        "attributeType": "S"
                      },
                      {
                        "attributeName": "SK",
                        "attributeType": "S"
                      }
                    ],
                    "provisionedThroughput": {
                      "readCapacityUnits": 5,
                      "writeCapacityUnits": 5
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-dynamodb.CfnTable",
                  "version": "1.135.0"
                }
              },
              "ScalingRole": {
                "id": "ScalingRole",
                "path": "smokler/smokler_dev_user_table/ScalingRole",
                "constructInfo": {
                  "fqn": "@aws-cdk/core.Resource",
                  "version": "1.135.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-dynamodb.Table",
              "version": "1.135.0"
            }
          },
          "smokler_dev_media_bucket": {
            "id": "smokler_dev_media_bucket",
            "path": "smokler/smokler_dev_media_bucket",
            "children": {
              "Notifications": {
                "id": "Notifications",
                "path": "smokler/smokler_dev_media_bucket/Notifications",
                "constructInfo": {
                  "fqn": "@aws-cdk/core.Construct",
                  "version": "1.135.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "smokler/smokler_dev_media_bucket/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                  "aws:cdk:cloudformation:props": {}
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket",
                  "version": "1.135.0"
                }
              },
              "Policy": {
                "id": "Policy",
                "path": "smokler/smokler_dev_media_bucket/Policy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "smokler/smokler_dev_media_bucket/Policy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                      "aws:cdk:cloudformation:props": {
                        "bucket": {
                          "Ref": "smoklerdevmediabucketFAE02E8C"
                        },
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "s3:GetObject",
                              "Effect": "Allow",
                              "Principal": {
                                "CanonicalUser": {
                                  "Fn::GetAtt": [
                                    "smoklerdevcloudfrontdistributionOrigin1S3Origin4D691CBF",
                                    "S3CanonicalUserId"
                                  ]
                                }
                              },
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    {
                                      "Fn::GetAtt": [
                                        "smoklerdevmediabucketFAE02E8C",
                                        "Arn"
                                      ]
                                    },
                                    "/*"
                                  ]
                                ]
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-s3.CfnBucketPolicy",
                      "version": "1.135.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-s3.BucketPolicy",
                  "version": "1.135.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-s3.Bucket",
              "version": "1.135.0"
            }
          },
          "smokler_dev_cloudfront_distribution": {
            "id": "smokler_dev_cloudfront_distribution",
            "path": "smokler/smokler_dev_cloudfront_distribution",
            "children": {
              "Origin1": {
                "id": "Origin1",
                "path": "smokler/smokler_dev_cloudfront_distribution/Origin1",
                "children": {
                  "S3Origin": {
                    "id": "S3Origin",
                    "path": "smokler/smokler_dev_cloudfront_distribution/Origin1/S3Origin",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "smokler/smokler_dev_cloudfront_distribution/Origin1/S3Origin/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
                          "aws:cdk:cloudformation:props": {
                            "cloudFrontOriginAccessIdentityConfig": {
                              "comment": "Identity for smoklersmoklerdevcloudfrontdistributionOrigin14DB243D9"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-cloudfront.CfnCloudFrontOriginAccessIdentity",
                          "version": "1.135.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-cloudfront.OriginAccessIdentity",
                      "version": "1.135.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/core.Construct",
                  "version": "1.135.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "smokler/smokler_dev_cloudfront_distribution/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudFront::Distribution",
                  "aws:cdk:cloudformation:props": {
                    "distributionConfig": {
                      "enabled": true,
                      "origins": [
                        {
                          "domainName": {
                            "Fn::GetAtt": [
                              "smoklerdevmediabucketFAE02E8C",
                              "RegionalDomainName"
                            ]
                          },
                          "id": "smoklersmoklerdevcloudfrontdistributionOrigin14DB243D9",
                          "s3OriginConfig": {
                            "originAccessIdentity": {
                              "Fn::Join": [
                                "",
                                [
                                  "origin-access-identity/cloudfront/",
                                  {
                                    "Ref": "smoklerdevcloudfrontdistributionOrigin1S3Origin4D691CBF"
                                  }
                                ]
                              ]
                            }
                          }
                        }
                      ],
                      "defaultCacheBehavior": {
                        "pathPattern": "*",
                        "targetOriginId": "smoklersmoklerdevcloudfrontdistributionOrigin14DB243D9",
                        "cachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
                        "compress": true,
                        "viewerProtocolPolicy": "allow-all"
                      },
                      "httpVersion": "http2",
                      "ipv6Enabled": true
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution",
                  "version": "1.135.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-cloudfront.Distribution",
              "version": "1.135.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "smokler/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "smokler/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "@aws-cdk/core.CfnResource",
                  "version": "1.135.0"
                }
              },
              "Condition": {
                "id": "Condition",
                "path": "smokler/CDKMetadata/Condition",
                "constructInfo": {
                  "fqn": "@aws-cdk/core.CfnCondition",
                  "version": "1.135.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.135.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "@aws-cdk/core.Stack",
          "version": "1.135.0"
        }
      }
    },
    "constructInfo": {
      "fqn": "@aws-cdk/core.App",
      "version": "1.135.0"
    }
  }
}